{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/phonebook/contacts-actions.js","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/phonebook/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","a","get","then","data","catch","error","addContact","name","number","contact","post","deleteContact","contactId","delete","getLoading","state","contacts","loading","getFilter","filter","getContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","connect","contactsSelectors","onDeleteContact","id","contactsOperations","className","s","contacts_list","map","item","contact_text","type","onClick","onSubmit","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","container_form","e","preventDefault","form","label_text","input_form","onChange","pattern","title","required","button_form","contactsActions","target","label_filter","input_filter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","action","payload","isLoading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6120096a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_list\":\"ContactList_contacts_list__1hciY\",\"item\":\"ContactList_item__2dEqa\",\"contact_text\":\"ContactList_contact_text__LFTj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_filter\":\"Filter_label_filter__3x6MD\",\"input_filter\":\"Filter_input_filter__1LFLP\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","// import * as contactShelfApi from 'services/contacts-api';\r\n// import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  fetchContactsRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n// export const fetchContacts = () => async dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   try {\r\n//     const contacts = await contactShelfApi.fetchContacts();\r\n//     dispatch(fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\n///////////////////////////////////////////////////////////\r\n\r\n// export const fetchContacts = createAsyncThunk(\r\n//   'contacts/fetchContacts',\r\n//   async (_, { rejectWithValue }) => {\r\n//     try {\r\n//       const contacts = await contactShelfApi.fetchContacts();\r\n//       return contacts;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul className={s.contacts_list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.item} key={id}>\r\n            <p className={s.contact_text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit, contacts, loading }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(name => (name = ''));\r\n    setNumber(number => (number = ''));\r\n  };\r\n\r\n  return (\r\n    <div className={s.container_form}>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.label_text}>\r\n          Name\r\n          <input\r\n            className={s.input_form}\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label_text}>\r\n          Number\r\n          <input\r\n            className={s.input_form}\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.button_form}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n\r\n      {loading && <h2>Loading...</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  loading: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsActions } from 'redux/phonebook';\r\nimport { contactsSelectors } from 'redux/phonebook';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    <label className={s.label_filter}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input_filter}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  changeFilter,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  fetchContactsRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n  [addContactError]: (_, action) => action.payload,\r\n  [deleteContactError]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  isLoading,\r\n  filter,\r\n  error,\r\n});\r\n\r\n// const items = createReducer([], {\r\n//   [fetchContacts.pending]: (_, action) => action.payload,\r\n//   [fetchContacts.fulfilled]: (state, { payload }) => [...state, payload],\r\n//   [fetchContacts.rejected]: (state, { payload }) =>\r\n//     state.filter(contact => contact.id !== payload),\r\n// });\r\n\r\n// const isLoading = createReducer(false, {\r\n//   [fetchContacts.pending]: () => true,\r\n//   [fetchContacts.fulfilled]: () => false,\r\n//   [fetchContacts.rejected]: () => false,\r\n// });\r\n\r\n// const error = createReducer(null, {\r\n//   [fetchContacts.rejected]: (_, action) => action.payload,\r\n//   [fetchContacts.pending]: () => null,\r\n// });\r\n","import contactsReducer from 'redux/phonebook/contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\nimport { Provider } from 'react-redux';\nimport * as store from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_form\":\"ContactForm_container_form__2Mp8D\",\"form\":\"ContactForm_form__3iK7Q\",\"label_text\":\"ContactForm_label_text__CroP3\",\"input_form\":\"ContactForm_input_form__3QDlC\"};"],"sourceRoot":""}